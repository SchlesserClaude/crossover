{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Cloudformation template to deploy MyBB forum - http://www.mybb.com. Architecture contains a load-balanced, autoscaled MyBB web server application attached to a multi-AZ Relational Database Service database instance. The web site is available on port 80 of the ELB URL (Generated in output section).",

  "Parameters" : {
    "InstanceType" : {
      "Description" : "Type of EC2 instance to launch for WebServers",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : [ "t2.micro", "t2.small", "t2.medium", "t2.large", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge" ],
      "ConstraintDescription" : "must be a valid EC2 instance type"
    },
    "KeyName" : {
      "Description" : "The name of an existing EC2 KeyPair enabling allow SSH access to the instance",
      "Type" : "String"
    },
    "DBName" : {
      "Description" : "Database name",
      "Type" : "String",
      "Default" : "mybb"
    },
    "DBPort" : {
      "Description" : "TCP/IP port number for the database",
      "Type" : "String",
      "Default" : "3306"
    },
    "DBUser" : {
      "Description" : "Database user",
      "Type" : "String",
      "NoEcho" : "true"
    },
    "DBPassword" : {
      "Description" : "Database password",
      "Type" : "String",
      "NoEcho" : "true"
    },
    "OperatorEmail" : {
      "Description" : "Email address to notify if there are any operational issues",
      "Type" : "String",
      "Default" : "hello@rohit.io"
    },

    "MyBbTablePrefix" : {
      "Description" : "MyBB table prefix (leave unchanged, if unsure)",
      "Type" : "String",
      "Default" : "mybb_"
    }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro"    : { "Arch" : "64" },
      "t2.small"    : { "Arch" : "64" },
      "t2.medium"   : { "Arch" : "64" },
      "t2.large"    : { "Arch" : "64" },
      "m4.large"    : { "Arch" : "64" },
      "m4.xlarge"   : { "Arch" : "64" },
      "m4.2xlarge"  : { "Arch" : "64" },
      "m4.4xlarge"  : { "Arch" : "64" },
      "m4.10xlarge" : { "Arch" : "64" },
      "m3.medium"   : { "Arch" : "64" },
      "m3.large"    : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c4.large"    : { "Arch" : "64" },
      "c4.xlarge"   : { "Arch" : "64" },
      "c4.2xlarge"  : { "Arch" : "64" },
      "c4.4xlarge"  : { "Arch" : "64" },
      "c4.8xlarge"  : { "Arch" : "64" },
      "c3.large"    : { "Arch" : "64" },
      "c3.xlarge"   : { "Arch" : "64" },
      "c3.2xlarge"  : { "Arch" : "64" },
      "c3.4xlarge"  : { "Arch" : "64" },
      "c3.8xlarge"  : { "Arch" : "64" },
      "r3.large"    : { "Arch" : "64" },
      "r3.xlarge"   : { "Arch" : "64" },
      "r3.2xlarge"  : { "Arch" : "64" },
      "r3.4xlarge"  : { "Arch" : "64" },
      "r3.8xlarge"  : { "Arch" : "64" }
    },
    "AWSRegionArch2AMI" : {
      "ap-northeast-1" : {"64": "ami-eb0a2985"},
      "ap-southeast-1" : {"64": "ami-f78c4d94"},
      "eu-central-1"   : {"64": "ami-02392b6e"},
      "eu-west-1"      : {"64": "ami-6514ce16"},
      "sa-east-1"      : {"64": "ami-9f4cf6f3"},
      "us-east-1"      : {"64": "ami-7b89cc11"},
      "us-west-1"      : {"64": "ami-809df3e0"},
      "cn-north-1"     : {"64": "ami-a664f89f"},
      "us-gov-west"    : {"64": "ami-30b8da13"},
      "ap-southeast-2" : {"64": "ami-a25a03c1"},
      "us-west-2"      : {"64": "ami-d24c5cb3"}
    },
    "AWSRegionCapabilities" : {
      "us-east-1"      : { "RDSMultiAZ" : "true" },
      "us-west-1"      : { "RDSMultiAZ" : "true" },
      "eu-west-1"      : { "RDSMultiAZ" : "true" },
      "ap-southeast-1" : { "RDSMultiAZ" : "true" },
      "ap-northeast-1" : { "RDSMultiAZ" : "true" }
    }
  },

  "Resources" : {
    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LBCookieStickinessPolicy" : [ {
          "PolicyName" : "CookieBasedPolicy",
          "CookieExpirationPeriod" : "30"
        } ],
        "Listeners" : [ {
          "LoadBalancerPort" : "80",
          "InstancePort" : "80",
          "Protocol" : "HTTP",
          "PolicyNames" : [ "CookieBasedPolicy" ]
        } ],
        "HealthCheck" : {
          "Target" : { "Fn::Join" : [ "", [ "HTTP:", "80", "/" ] ] },
          "HealthyThreshold" : "3",
          "UnhealthyThreshold" : "5",
          "Interval" : "20",
          "Timeout" : "5"
        }
      }
    },

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroups" : [{ "Ref" : "Ec2SecurityGroup" }],
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" }, { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "UserData" : { "Fn::Base64" :
                       { "Fn::Join" : [ "", [

"#!/bin/bash -ex                                                                                                                                             \n",
"#                                                                                                                                                           \n",
"                                                                                                                                                            \n",
"apt-get update                                                                                                                                              \n",
"apt-get -y install python-setuptools                                                                                                                        \n",
"mkdir aws-cfn-bootstrap-latest                                                                                                                              \n",
"curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz | tar xz -C aws-cfn-bootstrap-latest --strip-components 1             \n",
"easy_install aws-cfn-bootstrap-latest                                                                                                                       \n",
"                                                                                                                                                            \n",
"# Helper function                                                                                                                                           \n",
"function error_exit                                                                                                                                         \n",
"{                                                                                                                                                           \n",
"    cfn-signal -e 1 -r \"$1\"                                                                                                                               \n",
"    exit 1                                                                                                                                                  \n",
"}                                                                                                                                                           \n",
"# Install packages and configure MyBB                                                                                                                       \n",
"cfn-init -s '", { "Ref" : "AWS::StackId" }, "' -r LaunchConfig --region '", { "Ref" : "AWS::Region" }, "' || error_exit 'Failed to run cfn-init'            \n",
"                                                                                                                                                            \n",
"# Configure the MyBB application.. - TODO                                                                                                                   \n",
"cd /usr/src/                                                                                                                                                \n",
"git clone https://github.com/rohit01/crossover.git                                                                                                          \n",
"cd crossover/                                                                                                                                               \n",
"bash ./install_mybb.sh ", { "Ref" : "DBName" }, " ", { "Ref" : "MyBbTablePrefix" }, " ", { "Fn::GetAtt" : ["DB", "Endpoint.Address"] }, " ", 
{ "Ref" : "DBUser" }," ", { "Ref" : "DBPassword" }, "                                                                                                        \n",
"rm /var/www/html/index.html                                                                                                                                 \n",
"cp -r mybb/* /var/www/html/                                                                                                                                 \n",
"                                                                                                                                                            \n",
"# All is well so signal success                                                                                                                             \n",
"cfn-signal -e 0 -r \"MyBB setup complete\"                                                                                                                  \n",
"                                                                                                                                                            \n"

                         ]]}
                     }
      },
      "Metadata" : {
        "Comment1" : "Install Apache Web Server and PHP",
        "AWS::CloudFormation::Init" : {
          "config" : {
            "packages" : {
              "apt" : {
                "libapache2-mod-php5"  : [],
                "php5-cli"             : [],
                "apache2"              : [],
                "php5-mysql"           : [],
                "git-core"             : []
              }
            },

            "services" : {
              "sysvinit" : {  
                "apache2" : {
                  "enabled"       : "true",
                  "ensureRunning" : "true"
                }
              }
            }
          }
        }
      }
    },

    "WebServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "MinSize" : "2",
        "MaxSize" : "10",
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ]
      }
    },

    "Ec2SecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "HTTP and SSH access",
        "SecurityGroupIngress" : [ {
          "IpProtocol" : "tcp", 
          "FromPort" : "22",
          "ToPort" : "22", 
          "CidrIp" : "0.0.0.0/0"
        },{
          "IpProtocol" : "tcp", 
          "FromPort" : "80",
          "ToPort" : "80", 
          "CidrIp" : "0.0.0.0/0"
        } ]
      }
    },

    "DBSecurityGroup" : { 
      "Type" : "AWS::RDS::DBSecurityGroup", 
      "Properties" : {
        "GroupDescription" : "Database Access",
        "DBSecurityGroupIngress" : {
          "EC2SecurityGroupName" : { "Ref" : "Ec2SecurityGroup" } 
        }
      }
    },

    "DB" : { 
      "Type" : "AWS::RDS::DBInstance", 
      "Properties" : {
        "AllocatedStorage" : "5", 
        "DBInstanceClass" : "db.m1.small",
        "MasterUsername" : { "Ref" : "DBUser" }, 
        "MasterUserPassword" : { "Ref" : "DBPassword" }, 
        "DBName" : { "Ref" : "DBName" },
        "DBSecurityGroups" : [ { "Ref" : "DBSecurityGroup" } ], 
        "Port" : { "Ref" : "DBPort" },
        "MultiAZ" : { "Fn::FindInMap" : [ "AWSRegionCapabilities", { "Ref" : "AWS::Region" }, "RDSMultiAZ"] },
        "Engine" : "MySQL" 
      }
    },

    "AlarmTopic" : {
      "Type" : "AWS::SNS::Topic",
      "Properties" : {
        "Subscription" : [ {
          "Endpoint" : { "Ref" : "OperatorEmail" },
          "Protocol" : "email"
        } ]
      }
    },

    "CPUAlarmHigh" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Alarm if CPU too high or metric disappears indicating instance is down",
        "AlarmActions" : [ { "Ref" : "AlarmTopic" } ],
        "InsufficientDataActions" : [ { "Ref" : "AlarmTopic" } ],
        "MetricName" : "CPUUtilization",
        "Namespace" : "AWS/EC2",
        "Statistic" : "Average",
        "Period" : "60",
        "EvaluationPeriods" : "1",
        "Threshold" : "10",
        "ComparisonOperator" : "GreaterThanThreshold",
        "Dimensions" : [ {
          "Name" : "AutoScalingGroupName",
          "Value" : { "Ref" : "WebServerGroup" }
        } ]
      }
    },

    "RequestLatencyAlarmHigh" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Alarm if there aren't any requests coming through",
        "AlarmActions" : [ { "Ref" : "AlarmTopic" } ],
        "InsufficientDataActions" : [ { "Ref" : "AlarmTopic" } ],
        "MetricName" : "Latency",
        "Namespace" : "AWS/ELB",
        "Statistic" : "Average",
        "Period" : "60",
        "EvaluationPeriods" : "1",
        "Threshold" : "1",
        "ComparisonOperator" : "GreaterThanThreshold",
        "Dimensions" : [ {
          "Name" : "LoadBalancerName",
          "Value" : { "Ref" : "ElasticLoadBalancer" }
        } ]
      }
    },

    "TooManyUnhealthyHostsAlarm" : {
      "Type" : "AWS::CloudWatch::Alarm",
      "Properties" : {
        "AlarmDescription" : "Alarm if there are too many unhealthy hosts.",
        "AlarmActions" : [ { "Ref" : "AlarmTopic" } ],
        "InsufficientDataActions" : [ { "Ref" : "AlarmTopic" } ],
        "MetricName" : "UnHealthyHostCount",
        "Namespace" : "AWS/ELB",
        "Statistic" : "Average",
        "Period" : "60",
        "EvaluationPeriods" : "1",
        "Threshold" : "0",
        "ComparisonOperator" : "GreaterThanThreshold",
        "Dimensions" : [ {
          "Name" : "LoadBalancerName",
          "Value" : { "Ref" : "ElasticLoadBalancer" }
        } ]
      }
    }
  },

  "Outputs" : {
    "URL" : {
      "Description" : "URL for the MyBB website",
      "Value" : { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ] }, "/" ] ] }
    }
  }
}
